@model QuailtyForm.ViewModels.ComplexFormViewModel

<head>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <!-- Önce jQuery -->
    <script src="https://code.jquery.com/jquery-3.x.x.min.js"></script>

    <!-- Sonra Bootstrap JS -->
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.x.x/js/bootstrap.min.js"></script>


    <!-- Select2 CSS -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>

    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet" />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #f4f4f4;
            padding: 20px;
            justify-content: center; /* Center content horizontally */
            align-items: center; /* Center content vertically */
            min-height: 100vh; /* Full viewport height */
        }

        form {
            background-image: url('https://fabitech.com.tr/assets/media/logos/constructor-form.png'); /* Arka plan resmi */
            background-color: rgba(255, 255, 255, 0.3); /* Beyaz renk ve yarı şeffaf arka plan */
            background-blend-mode: color-dodge; /* Arka plan resmi ve rengi arasında karışım modu */
            background-size: cover; /* Arka plan resmini kaplayacak şekilde ayarla */
            background-position: center; /* Arka plan resmini merkeze al */
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            /*          margin: auto; /* Sayfanın ortasına yerleştirir */ */ width: fit-content; /* İçeriğin genişliğine göre ayarlar */
            justify-content: center; /* Yatay eksende ortalar */
        }

            form > div {
                flex: 1;
                min-width: 100%; /* min-width ekleyerek yan yana sığabilecek minimum genişliği belirleyin */
                flex-direction: column;
                align-items: center;
            }

        h1 {
            color: #333333;
            margin-bottom: 0.5em;
            text-align: center; /* Add this line to center the text */
        }

        h3 {
            color: #333333;
            margin-bottom: 0.5em;
            align-items: center;
        }

        select {
            width: 100%;
            padding: 10px;
            margin-bottom: 20px;
            border-radius: 4px;
            border: 1px solid #cccccc;
            background-color: rgba(255, 255, 255, 0.7);
        }

        button {
            background-color: #4CAF50;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            button:hover {
                background-color: #45a049;
            }

        .radio-options {
            display: block; /* Changed from flex to block to stack the buttons vertically */
            margin-top: 10px; /* Adjust as needed to move the buttons down */
        }

        /* Style for the labels next to radio buttons */
        .radio-label {
            font-weight: 300; /* Make font thinner */
            margin-left: 5px; /* Add a little space between the radio button and the label */
        }

        /* New styles for question list */
        .question-list {
            background-color: white; /* Beyaz renk ve yarı şeffaf arka plan */
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            margin-top: 20px;
            display: flex;
            flex-direction: column;
        }

            .question-list ul {
                list-style-type: none;
                padding: 0;
                background-image: url('https://fabitech.com.tr/sign/Logo-Yatay-Mor.png'); /* Arka plan resmi */
                background-color: rgba(255, 255, 255, 0.8); /* Beyaz renk ve yarı şeffaf arka plan */
                background-blend-mode: color-dodge; /* Arka plan resmi ve rengi arasında karışım modu */
                background-size: cover; /* Arka plan resmini kaplayacak şekilde ayarla */
                background-position: center; /* Arka plan resmini merkeze al */
            }

            .question-list li {
                margin-bottom: 10px;
                font-weight: bold;
            }

        h1, h3 {
            font-weight: bold;
            color: black;
        }
        /* Dark Mode Stilleri */
        .dark-mode {
            background-color: #121212; /* Koyu arka plan rengi */
            color: #ffffff; /* Açık metin rengi */
        }

            .dark-mode h1, .dark-mode h3 {
                color: #ffffff;
            }

        .dark-mode form {
                background-color: #333333;
            
         
        }

            .dark-mode select {
                background-color: #121212;
                color:white;
            }
            .dark-mode .question-list {
                background-color: #333333; /* Form için koyu arka plan */
            }
        /* Diğer dark mode stillerini buraya ekleyebilirsiniz */

        /* Dark Mode Butonu */
        .dark-mode-button {
            background-color: #333333;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        /* Modal'ı sayfanın ortasında hizalama */
        .modal-dialog {
            display: flex;
            align-items: center;
            min-height: calc(100% - .5rem);
        }

        .modal {
            overflow-y: auto;
        }
    </style>
    <style>
        /* Switch Button Stilleri */
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        /* Yuvarlak Slider */
        .slider.round {
            border-radius: 34px;
        }

            .slider.round:before {
                border-radius: 50%;
            }

        /* Dark Mode Stilleri (Yukarıdakiyle aynı) */
        .dark-mode {
            /* Dark mode stilleri... */
        }
    </style>

</head>

<body>


    <form method="post">

        <h1>Kalite Kontrol Anketi</h1>
        <div class="col-12">
            <div class="col-12">
                <!-- Dark Mode Switch -->
                <div style="display: flex; align-items: center; margin-bottom:20px;">
                    <label class="switch">
                        <input type="checkbox" id="darkModeToggle">
                        <span class="slider round"></span>
                    </label>
                    <label for="darkModeToggle" style="margin-left: 10px;font-weight:bold;"><svg xmlns="http://www.w3.org/2000/svg" width="64" height="64" fill="currentColor" class="bi bi-moon-fill" viewBox="0 0 24 16">  <path d="M6 .278a.77.77 0 0 1 .08.858 7.2 7.2 0 0 0-.878 3.46c0 4.021 3.278 7.277 7.318 7.277q.792-.001 1.533-.16a.79.79 0 0 1 .81.316.73.73 0 0 1-.031.893A8.35 8.35 0 0 1 8.344 16C3.734 16 0 12.286 0 7.71 0 4.266 2.114 1.312 5.124.06A.75.75 0 0 1 6 .278" /></svg></label>
                </div>
                <div>
                    <h3>Kalite Kontrol</h3>
                    <select id="company1Select" asp-items="@(new SelectList(Model.Companies,"ProjectBlockDefId",  "ControlName","SurveyId"))">
                        <option value="">Kalite Kontrol seçin...</option>
                    </select>
                </div>
                <div>
                    <h3>Blok - Kat</h3>
                    <select id="project1Select" asp-items="@(new SelectList(Model.Projects, "BlockDefDId","DisplayText"))">
                        <option value="">Önce Kalite Kontrol Seçin...</option>
                    </select>
                </div>
                <div>
                    <h3>Kategori-1</h3>
                    <select id="category1Select" asp-items="@(new SelectList(Model.Categories1, "Id", "Description"))">
                        <option value="">Kategori 1 seçin...</option>
                    </select>
                </div>

                <div>
                    <h3>Kategori-2</h3>
                    <select id="category2Select">
                        <option value="">Önce Kategori 1 seçin...</option>
                    </select>
                </div>

                <div>
                    <h3>İmalat Grubu</h3>
                    <select id="category3Select">
                        <option value="">Önce Kategori 2 seçin...</option>
                    </select>
                </div>

                <div>
                    <h3>İmalat Adı</h3>
                    <select id="categorySelect" asp-items="@(new SelectList(Model.Categories4, "Id", "Description"))">
                        <option value="">Önce İmalat Grubu seçin...</option>
                    </select>
                </div>
                <div style="flex-basis: 100%;">
                    <button id="listeleButton" type="button" class="bg-primary">Soruları Listele</button>


                </div>

                <!-- Question list section, initially hidden -->
                <div class="question-list" id="questionList" style="display:none;">
                    <h3>Sorular Listesi</h3>
                    <ul id="questionItems" class="question-list">
                        <!-- Sorular burada listelenecek -->
                    </ul>
                    <button type="button" onclick="submitForm()" class="save-button">Anketi Kaydet</button>
                </div>
            </div>
        </div>
        <div class="modal fade" id="successModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="modalLabel">Anket Sonucu</h5>
                    </div>
                    <div class="modal-body">
                        Anketiniz başarıyla kaydedilmiştir.
                    </div>
                </div>
            </div>
        </div>
    </form>

</body>



<script>
    $(document).ready(function () {
        $('#listeleButton').click(function () {
            var category1Id = $('#category1Select').val();
            var category2Id = $('#category2Select').val();
            var category3Id = $('#category3Select').val();

            $.ajax({
                url: '@Url.Action("GetQuestionData", "Form")',
                type: 'GET',
                data: {
                    category1Id: category1Id,
                    category2Id: category2Id,
                    category3Id: category3Id
                },
                success: function (questions) {
                    console.log(questions); // Gelen veriyi konsolda inceleyin

                    var list = $('#questionList ul');
                    list.empty(); // Mevcut listeyi temizle

                    $.each(questions, function (index, question) {
                        var li = $('<li>');
                        li.append(document.createTextNode(question.question_Text));
                        li.append($('<br>'));
                        // Radyo butonları ekle
                        var radioAccept = $('<input>', { type: 'radio', name: question.id, value: 'accept', required: true });
                        var radioReject = $('<input>', { type: 'radio', name: question.id, value: 'reject', css: { marginLeft: '10px' } });


                        li.append(radioAccept);

                        li.append($('<label>').text('Kabul').css('color', 'green'));

                        li.append(radioReject);
                        li.append($('<label>').text('Red').css('color', 'red'));

                        list.append(li);
                    });

                    $('#questionList').show(); // Soru listesini göster
                },
                error: function (xhr, status, error) {
                    console.error("Hata:", error);
                }
            });
        });
    });
</script>

<script>
    $(document).ready(function () {
        // Category1 değişikliğinde Category2'yi güncelle
        $('#category1Select').change(function () {
            var selectedCategoryId = $(this).val();

            $.ajax({
                url: '@Url.Action("GetCategory2Data", "Form")',
                type: 'GET',
                data: { parentId: selectedCategoryId },
                success: function (data) {
                    var category2Select = $('#category2Select');
                    category2Select.empty();
                    category2Select.append($('<option>', { value: '', text: 'Kategori 2 seçin...' }));

                    $.each(data, function (index, item) {
                        category2Select.append($('<option>', {
                            value: item.id,
                            text: item.description
                        }));
                    });
                }
            });
        });

        // Category2 değişikliğinde Category3'ü güncelle
        $('#category2Select').change(function () {
            var selectedCategoryId = $(this).val();

            $.ajax({
                url: '@Url.Action("GetCategory3Data", "Form")',
                type: 'GET',
                data: { parentId: selectedCategoryId },
                success: function (data) {
                    var category3Select = $('#category3Select');
                    category3Select.empty();
                    category3Select.append($('<option>', { value: '', text: 'Kategori 3 seçin...' }));

                    $.each(data, function (index, item) {
                        category3Select.append($('<option>', {
                            value: item.id,
                            text: item.description
                        }));
                    });
                }
            });
        });

        // Kalite Kontrol Forma göre Kat Blok Seçme
        $('#company1Select').change(function () {
            var selectedProjectId = $(this).val();

            $.ajax({
                url: '@Url.Action("GetProjectData", "Form")',
                type: 'GET',
                data: { projectBlockDef: selectedProjectId },
                success: function (data) {
                    var project1Select = $('#project1Select');
                    project1Select.empty();
                    project1Select.append($('<option>', { value: '', text: 'Kalite Kontrol seçin...' }));

                    $.each(data, function (index, item) {
                        project1Select.append($('<option>', {
                            value: item.id,
                            text: item.displayText
                        }));
                    });
                }
            });
        });

    });



</script>
<script>
    function submitForm() {
        // get survey id
        var companies = @Html.Raw(Json.Serialize(Model.Companies));
        var name = $('#company1Select option:selected').text();
        var selectedCompany = companies.filter(c => c.controlName == name);
        console.log(selectedCompany);
        var surveyId = selectedCompany[0] ? selectedCompany[0].surveyId : null;
        console.log(surveyId);
        //get floor id
        var projects = @Html.Raw(Json.Serialize(Model.Projects));
        var displayText = $('#project1Select option:selected').text();
        var selectedProject = projects.filter(c => c.displayText == displayText);
        console.log(selectedProject);
        var floorId = selectedProject[0] ? selectedProject[0].blockDefDId : null;
        console.log(floorId);
        var formData = {
            surveyId: surveyId,
            floorId: floorId,

            questions: []  // Array to hold questions and their answers
        };

        $('#questionItems li').each(function () {

            debugger;
            var selectedRadio = $(this).find('input[type="radio"]:checked');
            if (selectedRadio.length > 0) {
                var questionId1 = selectedRadio.attr('name');
                var questionId = Number(questionId1);
                var answer = selectedRadio.val();

                formData.questions.push({
                    questionId: questionId,
                    answer: answer
                });
            }
        });
        console.log(JSON.stringify(formData));
        // AJAX POST request
        $.ajax({
            url: '@Url.Action("SubmitSurvey", "Form")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(formData),
            success: function (response) {
                // Modal pencereyi göster
                $('#successModal').modal('show');
                // Form gönderme butonunu devre dışı bırak
                $('#save-button').prop('disabled', true);
                // Kısa bir gecikme sonrasında sayfayı yenile
                setTimeout(function () {
                    window.location.reload();
                }, 2000); // 3000 milisaniye = 3 saniye
            },
            error: function (error) {
                // Error handling here
                alert('Bir hata oluştu. Anket kaydedilemedi.');
            }
        });
    }

</script>


@* 
<script>
    $('#successModal').on('hidden.bs.modal', function (e) {
        // Sayfayı yenileyin
        window.location.reload();

        // Veya isteğe bağlı olarak başka bir sayfaya yönlendirin
        // window.location.href = 'yeniSayfaURLsi';
    });
</script> *@

<script>
    $(document).ready(function () {
        // Dark mode toggle için event listener
        $('#darkModeToggle').change(function () {
            $('body').toggleClass('dark-mode');
        });
    });
</script>

