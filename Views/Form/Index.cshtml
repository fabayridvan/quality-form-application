@model QuailtyForm.ViewModels.FormDetailsViewModel

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Form Detayları</title>
    <link href="~/css/my.css" rel="stylesheet" />
    <link href="~/css/switch.css" rel="stylesheet" />
    <link href="~/css/select.css" rel="stylesheet" />

    <style>
        table {
            width: 100%;
            border-collapse: collapse;
        }

        th, td {
            padding: 8px;
            text-align: left;
            border: 1px solid #ddd;
        }

        th {
            background: -moz-linear-gradient(0deg, rgba(74,63,146,1) 0%, rgba(156,63,146,1) 100%);
            color: white;
            text-align: center;
            background-color: #f2f2f2;
            white-space: nowrap;
            text-overflow: ellipsis;
            overflow: hidden;
        }

        td {
            text-align: left;
        }

        .table-responsive {
            border-radius: 4px;
        }

        #popup {
            display: none;
            position: fixed;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            border: 1px solid #ccc;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
            z-index: 1000;
        }

        #overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }
    </style>
</head>
<body>
    <form asp-action="SubmitApproval" method="post" onsubmit="return handleSubmit(event)">
        <div class="container">
            <h3>Tarifler</h3>
            <ul>
                @foreach (var recipe in Model.RecipeDescs)
                {
                    <li>@recipe.RecipeDesc</li>
                }
            </ul>

            <h3>Sorular</h3>
            <ul>
                @foreach (var question in Model.Questions)
                {
                    <li>@question</li>
                }
            </ul>
        </div>
        <div>
            <h3>Onayla/Reddet</h3>
            <div>
                <label>
                    <input type="radio" name="approval" value="accept" /> Onayla
                </label>
                <label>
                    <input type="radio" name="approval" value="reject" /> Reddet
                </label>
            </div>
        </div>

        <div>
            <h3>Açıklama</h3>
            <textarea name="comments" rows="4" cols="50" placeholder="Bir Açıklama Yazınız..."></textarea>
        </div>

        @* Hidden fields for qualityControlDefId and projectBlockDefDId *@
        <input type="hidden" name="qualityControlDefId" value="@ViewData["QualityControlDefId"]" />
        <input type="hidden" name="projectBlockDefDId" value="@ViewData["ProjectBlockDefDId"]" />
        <input type="hidden" name="projectAndCompany" value="@ViewData["ProjectAndCompany"]" />
        <input type="hidden" name="formName" value="@ViewData["FormName"]" />
        <input type="hidden" name="blockAndFloor" value="@ViewData["BlockAndFloor"]" />
        <input type="hidden" name="approvalStatus" value="@ViewData["ApprovalStatus"]" />

        <button type="submit">Kaydet</button>
    </form>

    <!-- Pop-up -->
    <div id="overlay"></div>
    <div id="popup">
        <p>Kayıt yapılmıştır.</p>
        <button onclick="closePopup()">Kapat</button>
    </div>

    <script>
        function handleSubmit(event) {
            var radios = document.getElementsByName('approval');
            var formIsValid = false;

            for (var i = 0; i < radios.length; i++) {
                if (radios[i].checked) {
                    formIsValid = true;
                    break;
                }
            }

            if (!formIsValid) {
                alert('Lütfen bir seçenek seçin: Onayla veya Reddet');
                return false; // Formun gönderilmesini engeller
            }

            // Post işlemini simüle et (gerçek post işlemini burada yapabilirsiniz)
            var form = event.target;
            var formData = new FormData(form);

            fetch(form.action, {
                method: form.method,
                body: formData
            }).then(response => {
                if (response.ok) {
                    showPopup();
                } else {
                    alert('Bir hata oluştu, lütfen tekrar deneyin.');
                }
            }).catch(error => {
                console.error('Hata:', error);
                alert('Bir hata oluştu, lütfen tekrar deneyin.');
            });

            return false; // Formun normalde yapılacak işlemini durdurur
        }

        function showPopup() {
            document.getElementById('popup').style.display = 'block';
            document.getElementById('overlay').style.display = 'block';
        }

        function closePopup() {
            document.getElementById('popup').style.display = 'none';
            document.getElementById('overlay').style.display = 'none';
            window.location.href = "/Main/Index"; // Main/Index sayfasına yönlendirme
        }
    </script>
</body>
</html>
